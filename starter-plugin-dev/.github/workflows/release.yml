name: Plugin Release

# Set proper permissions for the GitHub Token
permissions:
  contents: write
  packages: write

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - none
      production_push:
        description: 'Push to production repo'
        required: true
        default: false
        type: boolean

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # To get all tags
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run type check
        run: npm run type-check
      
      - name: Extract current version
        id: get_version
        run: |
          VERSION=$(grep -Po "Version: \K[0-9]+\.[0-9]+\.[0-9]+(?:-dev)?" plugin-name-dev.php)
          IS_DEV=$(echo $VERSION | grep -c "\-dev")
          CLEAN_VERSION=${VERSION//-dev/}
          echo "Current version: $VERSION"
          echo "Clean version: $CLEAN_VERSION"
          echo "Is dev: $IS_DEV"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "clean_version=$CLEAN_VERSION" >> $GITHUB_OUTPUT
          echo "is_dev=$IS_DEV" >> $GITHUB_OUTPUT
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Bump version
        if: ${{ github.event.inputs.version_bump != 'none' }}
        run: |
          npm run version:${{ github.event.inputs.version_bump }}
      
      - name: Convert to production version
        run: |
          npm run to:prod
          NEW_VERSION=$(grep -Po "Version: \K[0-9]+\.[0-9]+\.[0-9]+" plugin-name-dev.php)
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
      
      - name: Build assets
        run: npm run build
      
      - name: Create production build
        run: npm run build:prod
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ env.new_version }}
          tag_name: v${{ env.new_version }}
          body: |
            ## Version ${{ env.new_version }}
            
            **Release Date:** ${{ github.event.repository.updated_at }}
            
            ### Changes in this version:
            - See commit history for detailed changes
            
            ### Installation:
            Download and install the plugin through the WordPress admin panel or upload the zip file manually.
          draft: false
          prerelease: false
          files: |
            build/plugin-name.zip
      
      - name: Push to production repo
        if: ${{ github.event.inputs.production_push == 'true' }}
        run: |
          cd build
          git init
          git add .
          git commit -m "Release v${{ env.new_version }}"
          git remote add origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/your-org/plugin-name.git
          git push -f origin main
          git tag -a v${{ env.new_version }} -m "Version ${{ env.new_version }}"
          git push origin v${{ env.new_version }}
      
      - name: Convert back to dev version
        run: |
          npm run to:dev
          git add .
          git commit -m "Back to development version"
          git push origin main